# PC Insights Bot

This is a Reddit bot that scans titles of recent posts on specific subreddits. If a post is given a known [tag], the bot will attempt to populate relevant information on that item and output its findings as a comment. The purpose is to inform Redditors who may be interested in purchasing the item if it's something they might want.

- Subreddit supported: r/buildapcsales
- Tags supported: none
- Future subreddits I'd like to support: r/bapcsalescanada
- Tags being worked on: (working on the primary back end system first)
- Tags I'd like to support: [CPU], [GPU], [RAM]

Inspiration for this bot goes to ocmarin's original [u/SSDBot](https://github.com/ocmarin/ssd-bot).

## Usage

The `setup` bash script ensures the virtual environment is prepared and dependencies are downloaded prior to running the bot. It also checks that the PRAW module can connect with the Reddit API. To run it, ensure the current user has Execution permissions and enter this command on the terminal:

```bash
> ./setup
```

The `setup` script tests the `praw.ini` configurations

When the `setup` script asks if you want to run the bot, you can say yes and the bot will run. To do so without the `setup` script, you can do so manually using either of the following commands:

```bash
# Method 1
./.venv-pc-insights-bot/bin/python3 ./bot/main.py

# Method 2
./run
```


## Why I Built This Project

There are two primary reasons why I started this project.

1. There was a need on r/buildapcsales. u/Newmaxx had his spreadsheet which has now been absorbed ny some other group. u/ocmarin had the original SSD bot, and when they stopped, others picked up the slack. And then the community relied on the goodwill of others to post relevant infomation. Why not build a bot myself, source the information and automate it?

2. I don't know Python as much as I'd like. This is an excellent way to build upon the knowledge I learned while working as a teachers assistant at the University of Arizona (RIP Section Leader program). The section below tracks what I have learned from writing this project.

## What I Have Learned So Far

- The biggest one that I still struggle with? Over-engineering early in the project. Or simply over-engineering, period. 

- Using the PRAW module, aka the Python Reddit API Wrapper.

- Python packaging. I started with a simple `setup` script. Then I tried a Makefile. I stumbled on Poetry, but I decided it wasn't much better than Makefile for my needs. Then I got tired of the complexity of Makefile for my simple needs, so now I'm back to the `setup` bash script. (See first bullet point)

- PIP and virtual environments (venv). Venv is sort of like containerizing the project without containers. I get the concept; I am not explaining it well. And PIP just makes sense. It's like `apt` or `snap` for Python.

- Singletons. Writing them is kind of fun. The __new__ vs __init__ still isn't quite clear at the time of this writing, but we'll see how that changes over time. 

- Modules and importing. It's been an absolute struggle and enlightening experience to wrap my head around how modules and importing works in Python. Java feels so simple and intuitive. The mere existence of `__init__.py` in each directory both makes sense and doesn't at the same time. For the sake of pushing out code, I'm doing what I'm told and testing everything along the way. 

## License
This project in maintained under the GNU General Public License v3.0. See [LICENSE](https://github.com/pdmahon1/enhanced-ssd-bot/blob/main/LICENSE)
